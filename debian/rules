#! /bin/sh -e
## debian/rules for SHOOP
## by Gergely Nagy <algernon@debian.org>

# exports
export SHOOPPATH=${PWD}:${PWD}/modules
export SHOOPMOD=${PWD}/modules
export DH_COMPAT=3

# #include <shoop>
. ${PWD}/shoop.sh

# basic setup
OBJECT . new DEBIAN

DEBIAN . MAKE_LEVEL =q 0

# core methods
DEBIAN . header : 'echo "==> [`eval $THIS . MAKE_LEVEL`] Making $@" 1>&2
	$THIS . MAKE_LEVEL =q `expr \`eval $THIS . MAKE_LEVEL\` + 1`'
DEBIAN . done : '$THIS . MAKE_LEVEL =q `expr \`eval $THIS . MAKE_LEVEL\` - 1`
	echo "<== [`eval $THIS . MAKE_LEVEL`] Finished $@" 1>&2'
DEBIAN . do : 'echo $@
	eval $@'

# These do the Real Job
DEBIAN . do_build : 'test -f build-stamp || $THIS . build_stamp'
DEBIAN . do_build_stamp : '$THIS . do dh_testdir
	$THIS . do "make docs/modules.txt 2>/dev/null"
	$THIS . do touch build-stamp'
DEBIAN . do_clean : '$THIS . do dh_testdir
	$THIS . do dh_testroot
	$THIS . do rm -f build-stamp docs/modules.txt docs/modules.pod
	$THIS . do "make clean || true"
	$THIS . do dh_clean'
DEBIAN . do_install : '$THIS . build
	$THIS . do dh_testdir
	$THIS . do dh_testroot
	$THIS . do dh_clean -k
	$THIS . do dh_installdirs
	$THIS . do make install
	$THIS . do rm -f debian/shoop/usr/share/doc/shoop/COPYING \
			 debian/shoop/usr/share/doc/shoop/COPYING.gz
	$THIS . do mv debian/shoop/usr/share/shoop/modules \
		      debian/shoop-modules/usr/share/shoop/modules
	$THIS . do mv debian/shoop/usr/share/doc/shoop/modules.txt \
		      debian/shoop-modules/usr/share/doc/shoop-modules/
	$THIS . do mv debian/shoop/usr/share/doc/shoop/MODULES \
		      debian/shoop-modules/usr/share/doc/shoop-modules/
	$THIS . do mv debian/shoop/usr/share/doc/shoop/examples \
		      debian/shoop-modules/usr/share/doc/shoop-modules/'
DEBIAN . do_packages : '$THIS . build
	$THIS . install
	$THIS . do dh_testdir
	$THIS . do dh_testroot
#	$THIS . do dh_installdebconf
	$THIS . do dh_installdocs
#	$THIS . do dh_installmenu
#	$THIS . do dh_installinfo
	$THIS . do dh_installchangelogs
	$THIS . do dh_link
	$THIS . do dh_strip
	$THIS . do dh_compress
	$THIS . do dh_fixperms
	$THIS . do dh_installdeb
	$THIS . do dh_gencontrol
	$THIS . do dh_md5sums
	$THIS . do dh_builddeb'
DEBIAN . do_binary_arch : ''
DEBIAN . do_binary_indep : '$THIS . packages'
DEBIAN . do_binary : '$THIS . binary_arch
	$THIS . binary_indep'

# Wrapper function that calls header & done too
DEBIAN . do_func : '$THIS . header $LASTMETH
	$THIS . do_$LASTMETH
	$THIS . done $LASTMETH'
# Use the wrapper for all targets
DEBIAN . build : DEBIAN . do_func
DEBIAN . build_stamp : DEBIAN . do_func
DEBIAN . clean : DEBIAN . do_func
DEBIAN . install : DEBIAN . do_func
DEBIAN . packages : DEBIAN . do_func
DEBIAN . binary_arch : DEBIAN . do_func
DEBIAN . binary_indep : DEBIAN . do_func
DEBIAN . binary : DEBIAN . do_func

# void main ( whatever )
DEBIAN . debian : '$THIS . header debian
	for opt in $@
	do
		case $opt in
			build|build-stamp|clean|install|packages|binary-arch|binary-indep|binary)
				method=`echo $opt | sed -e "s,\-,_,g"`
				DEBIAN . $method
				;;
			DEB_*=*)
				# These are useless for us
				;;
			*)
				echo "*** Unsupported target: $opt"
				exit 1
				;;
		esac
	done
	$THIS . done debian'

# Run forest, run !
DEBIAN . debian ${@:-build}

exit 0
